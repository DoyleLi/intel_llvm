name: sycl_cts_cpu

on:
  pull_request:
    branches:
    - sycl
    paths:
    - '.github/workflows/sycl_cts.yml'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Prepare Env 
      run: sudo apt-get install -y ninja-build cmake build-essential
 

    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: llvm.src

    - uses: actions/checkout@v2
      with:
        # persist-credentials: false allows us to use our own credentials for
        # pushing to the repository.  Otherwise, the default github actions token
        # is used.
        persist-credentials: false
        fetch-depth: 1
        repository: KhronosGroup/SYCL-CTS
        token: ${{ secrets.DOYLELI_DEBUG_TOKEN }}
        path: icl_tst-sycl-cts
        ref: a80827e6d3cc0d92327ebe91c0a687807b972d65

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7.8'

    - name: Prepare obj folder
      run: |
        mkdir llvm.obj

    - name: Dependency Step
      run: |
        python3 -u llvm.src/buildbot/dependency.py -n $GITHUB_RUN_NUMBER -b sycl -d sycl -w $PWD -s $PWD/llvm.src -o $PWD/llvm.obj -c

    - name: Configure Step
      run: |
        python3 -u llvm.src/buildbot/configure.py -n $GITHUB_RUN_NUMBER -b sycl -d sycl -t Release -w $PWD -s $PWD/llvm.src -o $PWD/llvm.obj

    - name: Build Step
      run: |
        python3 -u llvm.src/buildbot/compile.py -n $GITHUB_RUN_NUMBER -b sycl -d sycl -w $PWD -s $PWD/llvm.src -o $PWD/llvm.obj

    - name: SYCL_CTS Step
      run: |
        mkdir build
        cd build; cmake -G "Ninja" -DSYCL_IMPLEMENTATION=Intel_SYCL -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE="" -DINTEL_SYCL_ROOT=$PWD/..//llvm.obj -DOpenCL_INCLUDE_DIR=$PWD/..//llvm.obj/include/sycl -DOpenCL_LIBRARY=$PWD/..//llvm.obj/lib/libOpenCL.so -Dopencl_platform_name=intel -Dopencl_device_name=opencl_cpu $PWD/..//icl_tst-sycl-cts
        ninja -j 2
        ctest --verbose -j 2 -R test_buffer_opencl$ --timeout 2800







